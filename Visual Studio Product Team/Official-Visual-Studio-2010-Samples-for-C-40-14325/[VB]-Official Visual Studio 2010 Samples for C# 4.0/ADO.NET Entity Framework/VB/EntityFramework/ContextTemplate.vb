
'------------------------------------------------------------------------------
' <auto-generated>
'    This code was generated from a template.
'
'    Manual changes to this file may cause unexpected behavior in your application.
'    Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Data.EntityClient
Imports System.Diagnostics.CodeAnalysis
Imports System.ComponentModel
Imports System.Xml.Serialization
Imports System.Runtime.Serialization
Imports EmployeeTracker.Common
Imports EmployeeTracker.Model

Namespace EmployeeTracker.EntityFramework
    
    #Region "Contexts"
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <SuppressMessage("Microsoft.Design", "CA1063:ImplementIDisposableCorrectly", Justification := "IDisposable is specified by IEmployeeContext and the implementation is inherited from ObjectContext")>
    Public Partial Class EmployeeEntities
        Inherits ObjectContext
        Implements IEmployeeContext
    
        #Region "Constructors"
        ''' <summary>
        ''' Initializes a new EmployeeEntities object using the connection string found in the 'EmployeeEntities' section of the application configuration file.
        ''' </summary>
        Public Sub New()
            MyBase.New("name=EmployeeEntities", "EmployeeEntities")
            Me.ContextOptions.LazyLoadingEnabled = True
            OnContextCreated()
        End Sub
    
        ''' <summary>
        ''' Initialize a new EmployeeEntities object.
        ''' </summary>
        Public Sub New(ByVal connectionString As String)
            MyBase.New(connectionString, "EmployeeEntities")
            Me.ContextOptions.LazyLoadingEnabled = True
            OnContextCreated()
        End Sub
    
        ''' <summary>
        ''' Initialize a new EmployeeEntities object.
        ''' </summary>
        Public Sub New(ByVal connection As EntityConnection)
            MyBase.New(connection, "EmployeeEntities")
            Me.ContextOptions.LazyLoadingEnabled = True
            OnContextCreated()
        End Sub
        #End Region
    
        #Region "Partial Methods"
        Partial Private Sub OnContextCreated()
        End Sub
        #End Region
    	
        #Region "IEmployeeContext"
    
            ''' <summary>
            ''' Save all pending changes to the data context
            ''' </summary>
            Public Sub Save() Implements IEmployeeContext.Save
                Me.SaveChanges()
            End Sub
    
            ''' <summary>
            ''' Checks if the supplied object is tracked in this data context
            ''' </summary>
            ''' <param name="obj">The object to check for</param>
            ''' <returns>True if the object is tracked, false otherwise</returns>
            Public Function IsObjectTracked(ByVal entity As Object) As Boolean Implements IEmployeeContext.IsObjectTracked
                Dim ose As ObjectStateEntry = Nothing
                Return Me.ObjectStateManager.TryGetObjectStateEntry(entity, ose)
            End Function
    		
            ''' <summary>
            ''' Creates a new instance of the specified object type
            ''' </summary>
            ''' <typeparam name="T">The type to create</typeparam>
            ''' <returns>The newly created object</returns>
            Function CreateObject2(Of T As Class)() As T Implements IEmployeeContext.CreateObject
                Return MyBase.CreateObject(Of T)()
            End Function
    		
            #End Region
    
        #Region "ObjectSet Properties"
    
        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        Public ReadOnly Property ContactDetails() As IObjectSet(Of ContactDetail)  Implements IEmployeeContext.ContactDetails
            Get
                If (_ContactDetails Is Nothing) Then
                    _ContactDetails = MyBase.CreateObjectSet(Of ContactDetail)("ContactDetails")
                End If
                Return _ContactDetails
            End Get
        End Property
    
        Private _ContactDetails As ObjectSet(Of ContactDetail)
    
        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        Public ReadOnly Property Departments() As IObjectSet(Of Department)  Implements IEmployeeContext.Departments
            Get
                If (_Departments Is Nothing) Then
                    _Departments = MyBase.CreateObjectSet(Of Department)("Departments")
                End If
                Return _Departments
            End Get
        End Property
    
        Private _Departments As ObjectSet(Of Department)
    
        ''' <summary>
        ''' No Metadata Documentation available.
        ''' </summary>
        Public ReadOnly Property Employees() As IObjectSet(Of Employee)  Implements IEmployeeContext.Employees
            Get
                If (_Employees Is Nothing) Then
                    _Employees = MyBase.CreateObjectSet(Of Employee)("Employees")
                End If
                Return _Employees
            End Get
        End Property
    
        Private _Employees As ObjectSet(Of Employee)

        #End Region
        #Region "AddTo Methods"
    
        ''' <summary>
        ''' Deprecated Method for adding a new object to the ContactDetails EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
        ''' </summary>
        Public Sub AddToContactDetails(ByVal contactDetail As ContactDetail)
            MyBase.AddObject("ContactDetails", contactDetail)
        End Sub
    
        ''' <summary>
        ''' Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
        ''' </summary>
        Public Sub AddToDepartments(ByVal department As Department)
            MyBase.AddObject("Departments", department)
        End Sub
    
        ''' <summary>
        ''' Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
        ''' </summary>
        Public Sub AddToEmployees(ByVal employee As Employee)
            MyBase.AddObject("Employees", employee)
        End Sub

        #End Region
    End Class

    #End Region
    
    End Namespace

