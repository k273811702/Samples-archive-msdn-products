<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="../../../../Common/Overview.xsl" type="text/xsl"?>
<VSSDKSample>
  <ImagePath>../../../../Common</ImagePath>
  <Status>
    <Accessibility>true</Accessibility>
    <ArchitectureDiagram>true</ArchitectureDiagram>
    <Comments>true</Comments>
    <Documentation>true</Documentation>
    <ErrorHandling>true</ErrorHandling>
    <FollowSDKCodingStandards>false</FollowSDKCodingStandards>
    <Localizable>true</Localizable>
    <Overview>true</Overview>
    <ScenarioTests>false</ScenarioTests>
    <Supported>true</Supported>
    <UnitTests>true</UnitTests>
    <Style>Example</Style>
  </Status>
  <Overview>
    <ShortName>C# Example.BasicSccProvider</ShortName>
    <LongName>C# Basic Source Code Control Provider Sample</LongName>
    <Phrase>Implementing a source code control provider in Visual Studio using C#.</Phrase>
  </Overview>
  <Introduction>
    <Summary>
      This sample demonstrates how to create a source code control provider that registers
      with Visual Studio and can be selected as active source control provider.
    </Summary>
    <Goal>Implement a source control provider package.</Goal>
    <Goal>Expose an Options page visible only when the provider is active.</Goal>
    <Goal>Expose a tool window visible only when the provider is active.</Goal>
    <Goal>Display menu items only when the provider is active.</Goal>
    <Image width="400" height="400">Example.BasicSccProvider.jpg</Image>
  </Introduction>
  <SampleInfo>
    <State>
    </State>
    <Type>Example</Type>
    <Complexity>2</Complexity>
    <Screenshot>Example.BasicSccProvider.jpg</Screenshot>
    <Area>Source Code Control</Area>
    <Language>C#</Language>
    <Folder>VisualStudioIntegration\Samples\SourceControl\CSharp\Example.BasicSccProvider\</Folder>
    <SampleSolution>BasicSccProvider.sln</SampleSolution>
    <FolderUnitTest>VisualStudioIntegration\Samples\SourceControl\CSharp\Example.BasicSccProvider\TDD\</FolderUnitTest>
    <UnitTestStartup>UnitTests.sln</UnitTestStartup>
    <Doc>ms-help://MS.VSCC.v90/MS.VSIPCC.v90/MS.VSSDK.v90/dv_vsintegration/html/23a07da8-41b2-4d18-834b-60a71e7a5c54.htm</Doc>
    <Keywords>
      <Keyword>SCC</Keyword>
      <Keyword>Source</Keyword>
      <Keyword>Code</Keyword>
      <Keyword>Control</Keyword>
      <Keyword>Tool window</Keyword>
      <Keyword>provider</Keyword>
      <Keyword>active</Keyword>
      <Keyword>menu</Keyword>
      <Keyword>items</Keyword>
      <Keyword>Source Code Control</Keyword>
      <Keyword>Source Code Control Provider</Keyword>
    </Keywords>
  </SampleInfo>
  <GettingStarted>
    <Paragraph>
      This sample has a package (BasicSccProvider) and the source control service (SccProviderService).
      The sample exposes one tool window (SccProviderToolWindow) and one Options page (SccProviderOptions).
    </Paragraph>
    <Paragraph>
      The source control provider can be selected on the Tools, Options, Source Control, Plug-In Selection page as "Managed Source Control Sample Basic Provider". Selecting it will make it the active source control provider.
    </Paragraph>
    <Paragraph>
      When the provider is selected as the active source control provider, 
      the command "Scc Command" will be added to the Tools menu and the command "Source control provider toolwindow" will be added to the View menu, and the Tools, Options, Source Control, Sample Options Page will become visible.
      When "View/Source control provider toolwindow" is clicked, the tool window will be created.
      The visibility of menu commands, Options page, and tool window is controlled by the active state of the provider.
      All of the UI elements will be hidden automatically when the provider is deactivated.
    </Paragraph>
  </GettingStarted>
  <AdditionalResources>
    <Resource>
      <Title>Visual Studio SDK Website</Title>
      <URL>http://msdn.microsoft.com/vstudio/extend</URL>
    </Resource>
  </AdditionalResources>
  <UnitTests>
    <Test>
      Verify that the package can be created and sited and that it implements IVsPackage.
    </Test>
    <Test>
      Verify that the source control provider service can be created, activated, and deactivated.
    </Test>
    <Test>
      Test the "Scc Command" command on the Tools menu by toggling it twice.
    </Test>
    <Test>
      Test the Options-page Activate, Deactivate, Apply, and Close events.
    </Test>
    <Test>
      Test that the tool window can be displayed and that the toolbar command can be executed.
    </Test>
  </UnitTests>
  <FunctionalTests>
    <Test>Verify sample builds in all configurations.</Test>
    <Test>Verify that the sample was registered. The About box should list the product as installed.</Test>
    <Test>Verify that the provider is accessible in Tools, Options, SourceControl.</Test>
    <Test>Verify that menu commands are visible when the provider is active.</Test>
    <Test>Verify that the tool window is visible only when the provider is active, after it was displayed once.</Test>
    <Test>Verify that the Options page is visible only when the provider is active.</Test>
  </FunctionalTests>
  <ProjectFiles>
    <File>
      <Name>BasicSccProvider.cs</Name>
      <Description>
        This file contains the Package implementation. It also is responsible for
        handling the enabling and execution of source control commands.
      </Description>
    </File>
    <File>
      <Name>SccProviderService.cs</Name>
      <Description>
        This file contains the source control service implementation.
        The class implements the IVsSccProvider interface that enables source control 
        provider activation and switching.
      </Description>
    </File>
    <File>
      <Name>SccProviderOptions.cs</Name>
      <Description>
        This class derives from MsVsShell.DialogPage and provides the Options page.
        It is responsible for handing the Option page events, such as activation, apply, and close. 
        It hosts the SccProviderOptionsControl.
      </Description>
    </File>
    <File>
      <Name>SccProviderOptionsControl.cs</Name>
      <Description>
        This class is a UserControl that will be hosted on the Options page.
        It has a label to demonstrate display of controls in the page.
      </Description>
    </File>
    <File>
      <Name>SccProviderToolWindow.cs</Name>
      <Description>
        This class derives from ToolWindowPane, which provides the IVsWindowPane
        implementation. It is responsible for defining the window frame properties
        such as caption and bitmap. It hosts the SccProviderToolWindowControl.
      </Description>
    </File>
    <File>
      <Name>SccProviderToolWindowControl.cs</Name>
      <Description>
        This class is a UserControl that will be hosted in the tool window. It has
        a label to demonstrate display of controls in the window.
      </Description>
    </File>
    <File>
      <Name>CommandId.cs</Name>
      <Description>
        This is a list of GUIDs specific to this sample, especially the package GUID
        and the commands group GUID. It also includes GUIDs of other elements used by
        the sample.
      </Description>
    </File>
    <File>
      <Name>Guids.cs</Name>
      <Description>
        This is the list of command IDs that the sample defines.
      </Description>
    </File>
    <File>
      <Name>PkgCmd.vsct</Name>
      <Description>
        This file describes the menu structure and commands for this sample.
      </Description>
    </File>
    <File>
      <Name>Resources (.cs/.resx/.Designer.cs)</Name>
      <Description>These files are used to support localized strings.</Description>
    </File>
    <File>
      <Name>Resources\Images_24bit.bmp</Name>
      <Description>
        This bitmap defines the icons that are used for tool windows.
      </Description>
    </File>
    <File>
      <Name>Resources\Images_32bit.bmp</Name>
      <Description>
        This bitmap defines the icons that are used for toolbars and menu commands.
      </Description>
    </File>
    <File>
      <Name>Resources\Product.ico</Name>
      <Description>
        This file defines the icon to be used for the product.
      </Description>
    </File>
    <File>
      <Name>ProvideSourceControlProvider.cs</Name>
      <Description>
        This file contains the implementation of a custom registration attribute 
        that registers a source control provider. It is used to make the source control 
        provider visible on the Tools, Options, SourceControl, Plugins page.
      </Description>
    </File>
    <File>
      <Name>ProvideToolsOptionsPageVisibility.cs</Name>
      <Description>
        This file contains the implementation of a custom registration attribute
        that defines the visibility of a tool window. It is used to make the tool 
        window implemented by the provider visible only when the provider is active 
        (that is, when the provider context UI has been asserted).
      </Description>
    </File>
  </ProjectFiles>
  <History>
    <Change>
      <Date>2005-10-01</Date>
      <Description>Created this sample for the Visual Studio 2005 SDK.</Description>
    </Change>
  </History>
</VSSDKSample>