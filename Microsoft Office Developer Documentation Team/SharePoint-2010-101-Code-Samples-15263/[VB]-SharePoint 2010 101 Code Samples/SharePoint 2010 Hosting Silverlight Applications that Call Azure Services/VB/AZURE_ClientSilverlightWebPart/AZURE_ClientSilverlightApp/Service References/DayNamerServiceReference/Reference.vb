'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


'
'This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
'
Namespace DayNamerServiceReference
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="DayNamerServiceReference.IDayNamer")>  _
    Public Interface IDayNamer
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/IDayNamer/TodayIs", ReplyAction:="http://tempuri.org/IDayNamer/TodayIsResponse")>  _
        Function BeginTodayIs(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndTodayIs(ByVal result As System.IAsyncResult) As String
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/IDayNamer/TodayAdd", ReplyAction:="http://tempuri.org/IDayNamer/TodayAddResponse")>  _
        Function BeginTodayAdd(ByVal daysToAdd As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndTodayAdd(ByVal result As System.IAsyncResult) As String
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IDayNamerChannel
        Inherits DayNamerServiceReference.IDayNamer, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class TodayIsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class TodayAddCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class DayNamerClient
        Inherits System.ServiceModel.ClientBase(Of DayNamerServiceReference.IDayNamer)
        Implements DayNamerServiceReference.IDayNamer
        
        Private onBeginTodayIsDelegate As BeginOperationDelegate
        
        Private onEndTodayIsDelegate As EndOperationDelegate
        
        Private onTodayIsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginTodayAddDelegate As BeginOperationDelegate
        
        Private onEndTodayAddDelegate As EndOperationDelegate
        
        Private onTodayAddCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginOpenDelegate As BeginOperationDelegate
        
        Private onEndOpenDelegate As EndOperationDelegate
        
        Private onOpenCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginCloseDelegate As BeginOperationDelegate
        
        Private onEndCloseDelegate As EndOperationDelegate
        
        Private onCloseCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Property CookieContainer() As System.Net.CookieContainer
            Get
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    Return httpCookieContainerManager.CookieContainer
                Else
                    Return Nothing
                End If
            End Get
            Set
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    httpCookieContainerManager.CookieContainer = value
                Else
                    Throw New System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC"& _ 
                            "ookieContainerBindingElement.")
                End If
            End Set
        End Property
        
        Public Event TodayIsCompleted As System.EventHandler(Of TodayIsCompletedEventArgs)
        
        Public Event TodayAddCompleted As System.EventHandler(Of TodayAddCompletedEventArgs)
        
        Public Event OpenCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        Public Event CloseCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DayNamerServiceReference_IDayNamer_BeginTodayIs(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements DayNamerServiceReference.IDayNamer.BeginTodayIs
            Return MyBase.Channel.BeginTodayIs(callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DayNamerServiceReference_IDayNamer_EndTodayIs(ByVal result As System.IAsyncResult) As String Implements DayNamerServiceReference.IDayNamer.EndTodayIs
            Return MyBase.Channel.EndTodayIs(result)
        End Function
        
        Private Function OnBeginTodayIs(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,DayNamerServiceReference.IDayNamer).BeginTodayIs(callback, asyncState)
        End Function
        
        Private Function OnEndTodayIs(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = CType(Me,DayNamerServiceReference.IDayNamer).EndTodayIs(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnTodayIsCompleted(ByVal state As Object)
            If (Not (Me.TodayIsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent TodayIsCompleted(Me, New TodayIsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub TodayIsAsync()
            Me.TodayIsAsync(Nothing)
        End Sub
        
        Public Overloads Sub TodayIsAsync(ByVal userState As Object)
            If (Me.onBeginTodayIsDelegate Is Nothing) Then
                Me.onBeginTodayIsDelegate = AddressOf Me.OnBeginTodayIs
            End If
            If (Me.onEndTodayIsDelegate Is Nothing) Then
                Me.onEndTodayIsDelegate = AddressOf Me.OnEndTodayIs
            End If
            If (Me.onTodayIsCompletedDelegate Is Nothing) Then
                Me.onTodayIsCompletedDelegate = AddressOf Me.OnTodayIsCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginTodayIsDelegate, Nothing, Me.onEndTodayIsDelegate, Me.onTodayIsCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DayNamerServiceReference_IDayNamer_BeginTodayAdd(ByVal daysToAdd As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements DayNamerServiceReference.IDayNamer.BeginTodayAdd
            Return MyBase.Channel.BeginTodayAdd(daysToAdd, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DayNamerServiceReference_IDayNamer_EndTodayAdd(ByVal result As System.IAsyncResult) As String Implements DayNamerServiceReference.IDayNamer.EndTodayAdd
            Return MyBase.Channel.EndTodayAdd(result)
        End Function
        
        Private Function OnBeginTodayAdd(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim daysToAdd As Integer = CType(inValues(0),Integer)
            Return CType(Me,DayNamerServiceReference.IDayNamer).BeginTodayAdd(daysToAdd, callback, asyncState)
        End Function
        
        Private Function OnEndTodayAdd(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = CType(Me,DayNamerServiceReference.IDayNamer).EndTodayAdd(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnTodayAddCompleted(ByVal state As Object)
            If (Not (Me.TodayAddCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent TodayAddCompleted(Me, New TodayAddCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub TodayAddAsync(ByVal daysToAdd As Integer)
            Me.TodayAddAsync(daysToAdd, Nothing)
        End Sub
        
        Public Overloads Sub TodayAddAsync(ByVal daysToAdd As Integer, ByVal userState As Object)
            If (Me.onBeginTodayAddDelegate Is Nothing) Then
                Me.onBeginTodayAddDelegate = AddressOf Me.OnBeginTodayAdd
            End If
            If (Me.onEndTodayAddDelegate Is Nothing) Then
                Me.onEndTodayAddDelegate = AddressOf Me.OnEndTodayAdd
            End If
            If (Me.onTodayAddCompletedDelegate Is Nothing) Then
                Me.onTodayAddCompletedDelegate = AddressOf Me.OnTodayAddCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginTodayAddDelegate, New Object() {daysToAdd}, Me.onEndTodayAddDelegate, Me.onTodayAddCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginOpen(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginOpen(callback, asyncState)
        End Function
        
        Private Function OnEndOpen(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndOpen(result)
            Return Nothing
        End Function
        
        Private Sub OnOpenCompleted(ByVal state As Object)
            If (Not (Me.OpenCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent OpenCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub OpenAsync()
            Me.OpenAsync(Nothing)
        End Sub
        
        Public Overloads Sub OpenAsync(ByVal userState As Object)
            If (Me.onBeginOpenDelegate Is Nothing) Then
                Me.onBeginOpenDelegate = AddressOf Me.OnBeginOpen
            End If
            If (Me.onEndOpenDelegate Is Nothing) Then
                Me.onEndOpenDelegate = AddressOf Me.OnEndOpen
            End If
            If (Me.onOpenCompletedDelegate Is Nothing) Then
                Me.onOpenCompletedDelegate = AddressOf Me.OnOpenCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOpenDelegate, Nothing, Me.onEndOpenDelegate, Me.onOpenCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginClose(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginClose(callback, asyncState)
        End Function
        
        Private Function OnEndClose(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndClose(result)
            Return Nothing
        End Function
        
        Private Sub OnCloseCompleted(ByVal state As Object)
            If (Not (Me.CloseCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent CloseCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub CloseAsync()
            Me.CloseAsync(Nothing)
        End Sub
        
        Public Overloads Sub CloseAsync(ByVal userState As Object)
            If (Me.onBeginCloseDelegate Is Nothing) Then
                Me.onBeginCloseDelegate = AddressOf Me.OnBeginClose
            End If
            If (Me.onEndCloseDelegate Is Nothing) Then
                Me.onEndCloseDelegate = AddressOf Me.OnEndClose
            End If
            If (Me.onCloseCompletedDelegate Is Nothing) Then
                Me.onCloseCompletedDelegate = AddressOf Me.OnCloseCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCloseDelegate, Nothing, Me.onEndCloseDelegate, Me.onCloseCompletedDelegate, userState)
        End Sub
        
        Protected Overrides Function CreateChannel() As DayNamerServiceReference.IDayNamer
            Return New DayNamerClientChannel(Me)
        End Function
        
        Private Class DayNamerClientChannel
            Inherits ChannelBase(Of DayNamerServiceReference.IDayNamer)
            Implements DayNamerServiceReference.IDayNamer
            
            Public Sub New(ByVal client As System.ServiceModel.ClientBase(Of DayNamerServiceReference.IDayNamer))
                MyBase.New(client)
            End Sub
            
            Public Function BeginTodayIs(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements DayNamerServiceReference.IDayNamer.BeginTodayIs
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("TodayIs", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndTodayIs(ByVal result As System.IAsyncResult) As String Implements DayNamerServiceReference.IDayNamer.EndTodayIs
                Dim _args((0) - 1) As Object
                Dim _result As String = CType(MyBase.EndInvoke("TodayIs", _args, result),String)
                Return _result
            End Function
            
            Public Function BeginTodayAdd(ByVal daysToAdd As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements DayNamerServiceReference.IDayNamer.BeginTodayAdd
                Dim _args((1) - 1) As Object
                _args(0) = daysToAdd
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("TodayAdd", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndTodayAdd(ByVal result As System.IAsyncResult) As String Implements DayNamerServiceReference.IDayNamer.EndTodayAdd
                Dim _args((0) - 1) As Object
                Dim _result As String = CType(MyBase.EndInvoke("TodayAdd", _args, result),String)
                Return _result
            End Function
        End Class
    End Class
End Namespace
