'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


'
'This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
'
Namespace SharePointSearchService
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://microsoft.com/webservices/OfficeServer/QueryService", ConfigurationName:="SharePointSearchService.QueryServiceSoap")>  _
    Public Interface QueryServiceSoap
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="urn:Microsoft.Search/Query", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function BeginQuery(ByVal request As SharePointSearchService.QueryRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndQuery(ByVal result As System.IAsyncResult) As SharePointSearchService.QueryResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://microsoft.com/webservices/OfficeServer/QueryService/QueryEx", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function BeginQueryEx(ByVal queryXml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndQueryEx(ByVal result As System.IAsyncResult) As SharePointSearchService.ArrayOfXElement
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="urn:Microsoft.Search/Registration", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function BeginRegistration(ByVal request As SharePointSearchService.RegistrationRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndRegistration(ByVal result As System.IAsyncResult) As SharePointSearchService.RegistrationResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="urn:Microsoft.Search/Status", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function BeginStatus(ByVal request As SharePointSearchService.StatusRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndStatus(ByVal result As System.IAsyncResult) As SharePointSearchService.StatusResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://microsoft.com/webservices/OfficeServer/QueryService/GetPortalSearchInfo", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function BeginGetPortalSearchInfo(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndGetPortalSearchInfo(ByVal result As System.IAsyncResult) As String
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://microsoft.com/webservices/OfficeServer/QueryService/GetSearchMetadata", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function BeginGetSearchMetadata(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndGetSearchMetadata(ByVal result As System.IAsyncResult) As SharePointSearchService.ArrayOfXElement
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="urn:Microsoft.Search/RecordClick", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function BeginRecordClick(ByVal request As SharePointSearchService.RecordClickRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndRecordClick(ByVal result As System.IAsyncResult) As SharePointSearchService.RecordClickResponse
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://microsoft.com/webservices/OfficeServer/QueryService/GetQuerySuggestions", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function BeginGetQuerySuggestions(ByVal queryXml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndGetQuerySuggestions(ByVal result As System.IAsyncResult) As String()
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="Query", WrapperNamespace:="urn:Microsoft.Search", IsWrapped:=true)>  _
    Partial Public Class QueryRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="urn:Microsoft.Search", Order:=0)>  _
        Public queryXml As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal queryXml As String)
            MyBase.New
            Me.queryXml = queryXml
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="QueryResponse", WrapperNamespace:="urn:Microsoft.Search", IsWrapped:=true)>  _
    Partial Public Class QueryResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="urn:Microsoft.Search", Order:=0)>  _
        Public QueryResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal QueryResult As String)
            MyBase.New
            Me.QueryResult = QueryResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="Registration", WrapperNamespace:="urn:Microsoft.Search", IsWrapped:=true)>  _
    Partial Public Class RegistrationRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="urn:Microsoft.Search", Order:=0)>  _
        Public registrationXml As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal registrationXml As String)
            MyBase.New
            Me.registrationXml = registrationXml
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RegistrationResponse", WrapperNamespace:="urn:Microsoft.Search", IsWrapped:=true)>  _
    Partial Public Class RegistrationResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="urn:Microsoft.Search", Order:=0)>  _
        Public RegistrationResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal RegistrationResult As String)
            MyBase.New
            Me.RegistrationResult = RegistrationResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="Status", WrapperNamespace:="urn:Microsoft.Search", IsWrapped:=true)>  _
    Partial Public Class StatusRequest
        
        Public Sub New()
            MyBase.New
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="StatusResponse", WrapperNamespace:="urn:Microsoft.Search", IsWrapped:=true)>  _
    Partial Public Class StatusResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="urn:Microsoft.Search", Order:=0)>  _
        Public StatusResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal StatusResult As String)
            MyBase.New
            Me.StatusResult = StatusResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RecordClick", WrapperNamespace:="urn:Microsoft.Search", IsWrapped:=true)>  _
    Partial Public Class RecordClickRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="urn:Microsoft.Search", Order:=0)>  _
        Public clickInfoXml As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal clickInfoXml As String)
            MyBase.New
            Me.clickInfoXml = clickInfoXml
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RecordClickResponse", WrapperNamespace:="urn:Microsoft.Search", IsWrapped:=true)>  _
    Partial Public Class RecordClickResponse
        
        Public Sub New()
            MyBase.New
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface QueryServiceSoapChannel
        Inherits SharePointSearchService.QueryServiceSoap, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class QueryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class QueryExCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SharePointSearchService.ArrayOfXElement
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SharePointSearchService.ArrayOfXElement)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class RegistrationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class StatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class GetPortalSearchInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class GetSearchMetadataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As SharePointSearchService.ArrayOfXElement
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SharePointSearchService.ArrayOfXElement)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class GetQuerySuggestionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String()
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class QueryServiceSoapClient
        Inherits System.ServiceModel.ClientBase(Of SharePointSearchService.QueryServiceSoap)
        Implements SharePointSearchService.QueryServiceSoap
        
        Private onBeginQueryDelegate As BeginOperationDelegate
        
        Private onEndQueryDelegate As EndOperationDelegate
        
        Private onQueryCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginQueryExDelegate As BeginOperationDelegate
        
        Private onEndQueryExDelegate As EndOperationDelegate
        
        Private onQueryExCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginRegistrationDelegate As BeginOperationDelegate
        
        Private onEndRegistrationDelegate As EndOperationDelegate
        
        Private onRegistrationCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginStatusDelegate As BeginOperationDelegate
        
        Private onEndStatusDelegate As EndOperationDelegate
        
        Private onStatusCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginGetPortalSearchInfoDelegate As BeginOperationDelegate
        
        Private onEndGetPortalSearchInfoDelegate As EndOperationDelegate
        
        Private onGetPortalSearchInfoCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginGetSearchMetadataDelegate As BeginOperationDelegate
        
        Private onEndGetSearchMetadataDelegate As EndOperationDelegate
        
        Private onGetSearchMetadataCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginRecordClickDelegate As BeginOperationDelegate
        
        Private onEndRecordClickDelegate As EndOperationDelegate
        
        Private onRecordClickCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginGetQuerySuggestionsDelegate As BeginOperationDelegate
        
        Private onEndGetQuerySuggestionsDelegate As EndOperationDelegate
        
        Private onGetQuerySuggestionsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginOpenDelegate As BeginOperationDelegate
        
        Private onEndOpenDelegate As EndOperationDelegate
        
        Private onOpenCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginCloseDelegate As BeginOperationDelegate
        
        Private onEndCloseDelegate As EndOperationDelegate
        
        Private onCloseCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Property CookieContainer() As System.Net.CookieContainer
            Get
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    Return httpCookieContainerManager.CookieContainer
                Else
                    Return Nothing
                End If
            End Get
            Set
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    httpCookieContainerManager.CookieContainer = value
                Else
                    Throw New System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC"& _ 
                            "ookieContainerBindingElement.")
                End If
            End Set
        End Property
        
        Public Event QueryCompleted As System.EventHandler(Of QueryCompletedEventArgs)
        
        Public Event QueryExCompleted As System.EventHandler(Of QueryExCompletedEventArgs)
        
        Public Event RegistrationCompleted As System.EventHandler(Of RegistrationCompletedEventArgs)
        
        Public Event StatusCompleted As System.EventHandler(Of StatusCompletedEventArgs)
        
        Public Event GetPortalSearchInfoCompleted As System.EventHandler(Of GetPortalSearchInfoCompletedEventArgs)
        
        Public Event GetSearchMetadataCompleted As System.EventHandler(Of GetSearchMetadataCompletedEventArgs)
        
        Public Event RecordClickCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        Public Event GetQuerySuggestionsCompleted As System.EventHandler(Of GetQuerySuggestionsCompletedEventArgs)
        
        Public Event OpenCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        Public Event CloseCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_BeginQuery(ByVal request As SharePointSearchService.QueryRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginQuery
            Return MyBase.Channel.BeginQuery(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Private Function BeginQuery(ByVal queryXml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim inValue As SharePointSearchService.QueryRequest = New SharePointSearchService.QueryRequest()
            inValue.queryXml = queryXml
            Return CType(Me,SharePointSearchService.QueryServiceSoap).BeginQuery(inValue, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_EndQuery(ByVal result As System.IAsyncResult) As SharePointSearchService.QueryResponse Implements SharePointSearchService.QueryServiceSoap.EndQuery
            Return MyBase.Channel.EndQuery(result)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Private Function EndQuery(ByVal result As System.IAsyncResult) As String
            Dim retVal As SharePointSearchService.QueryResponse = CType(Me,SharePointSearchService.QueryServiceSoap).EndQuery(result)
            Return retVal.QueryResult
        End Function
        
        Private Function OnBeginQuery(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim queryXml As String = CType(inValues(0),String)
            Return Me.BeginQuery(queryXml, callback, asyncState)
        End Function
        
        Private Function OnEndQuery(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = Me.EndQuery(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnQueryCompleted(ByVal state As Object)
            If (Not (Me.QueryCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent QueryCompleted(Me, New QueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub QueryAsync(ByVal queryXml As String)
            Me.QueryAsync(queryXml, Nothing)
        End Sub
        
        Public Overloads Sub QueryAsync(ByVal queryXml As String, ByVal userState As Object)
            If (Me.onBeginQueryDelegate Is Nothing) Then
                Me.onBeginQueryDelegate = AddressOf Me.OnBeginQuery
            End If
            If (Me.onEndQueryDelegate Is Nothing) Then
                Me.onEndQueryDelegate = AddressOf Me.OnEndQuery
            End If
            If (Me.onQueryCompletedDelegate Is Nothing) Then
                Me.onQueryCompletedDelegate = AddressOf Me.OnQueryCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginQueryDelegate, New Object() {queryXml}, Me.onEndQueryDelegate, Me.onQueryCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_BeginQueryEx(ByVal queryXml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginQueryEx
            Return MyBase.Channel.BeginQueryEx(queryXml, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_EndQueryEx(ByVal result As System.IAsyncResult) As SharePointSearchService.ArrayOfXElement Implements SharePointSearchService.QueryServiceSoap.EndQueryEx
            Return MyBase.Channel.EndQueryEx(result)
        End Function
        
        Private Function OnBeginQueryEx(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim queryXml As String = CType(inValues(0),String)
            Return CType(Me,SharePointSearchService.QueryServiceSoap).BeginQueryEx(queryXml, callback, asyncState)
        End Function
        
        Private Function OnEndQueryEx(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SharePointSearchService.ArrayOfXElement = CType(Me,SharePointSearchService.QueryServiceSoap).EndQueryEx(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnQueryExCompleted(ByVal state As Object)
            If (Not (Me.QueryExCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent QueryExCompleted(Me, New QueryExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub QueryExAsync(ByVal queryXml As String)
            Me.QueryExAsync(queryXml, Nothing)
        End Sub
        
        Public Overloads Sub QueryExAsync(ByVal queryXml As String, ByVal userState As Object)
            If (Me.onBeginQueryExDelegate Is Nothing) Then
                Me.onBeginQueryExDelegate = AddressOf Me.OnBeginQueryEx
            End If
            If (Me.onEndQueryExDelegate Is Nothing) Then
                Me.onEndQueryExDelegate = AddressOf Me.OnEndQueryEx
            End If
            If (Me.onQueryExCompletedDelegate Is Nothing) Then
                Me.onQueryExCompletedDelegate = AddressOf Me.OnQueryExCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginQueryExDelegate, New Object() {queryXml}, Me.onEndQueryExDelegate, Me.onQueryExCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_BeginRegistration(ByVal request As SharePointSearchService.RegistrationRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginRegistration
            Return MyBase.Channel.BeginRegistration(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Private Function BeginRegistration(ByVal registrationXml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim inValue As SharePointSearchService.RegistrationRequest = New SharePointSearchService.RegistrationRequest()
            inValue.registrationXml = registrationXml
            Return CType(Me,SharePointSearchService.QueryServiceSoap).BeginRegistration(inValue, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_EndRegistration(ByVal result As System.IAsyncResult) As SharePointSearchService.RegistrationResponse Implements SharePointSearchService.QueryServiceSoap.EndRegistration
            Return MyBase.Channel.EndRegistration(result)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Private Function EndRegistration(ByVal result As System.IAsyncResult) As String
            Dim retVal As SharePointSearchService.RegistrationResponse = CType(Me,SharePointSearchService.QueryServiceSoap).EndRegistration(result)
            Return retVal.RegistrationResult
        End Function
        
        Private Function OnBeginRegistration(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim registrationXml As String = CType(inValues(0),String)
            Return Me.BeginRegistration(registrationXml, callback, asyncState)
        End Function
        
        Private Function OnEndRegistration(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = Me.EndRegistration(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnRegistrationCompleted(ByVal state As Object)
            If (Not (Me.RegistrationCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent RegistrationCompleted(Me, New RegistrationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub RegistrationAsync(ByVal registrationXml As String)
            Me.RegistrationAsync(registrationXml, Nothing)
        End Sub
        
        Public Overloads Sub RegistrationAsync(ByVal registrationXml As String, ByVal userState As Object)
            If (Me.onBeginRegistrationDelegate Is Nothing) Then
                Me.onBeginRegistrationDelegate = AddressOf Me.OnBeginRegistration
            End If
            If (Me.onEndRegistrationDelegate Is Nothing) Then
                Me.onEndRegistrationDelegate = AddressOf Me.OnEndRegistration
            End If
            If (Me.onRegistrationCompletedDelegate Is Nothing) Then
                Me.onRegistrationCompletedDelegate = AddressOf Me.OnRegistrationCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginRegistrationDelegate, New Object() {registrationXml}, Me.onEndRegistrationDelegate, Me.onRegistrationCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_BeginStatus(ByVal request As SharePointSearchService.StatusRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginStatus
            Return MyBase.Channel.BeginStatus(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Private Function BeginStatus(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim inValue As SharePointSearchService.StatusRequest = New SharePointSearchService.StatusRequest()
            Return CType(Me,SharePointSearchService.QueryServiceSoap).BeginStatus(inValue, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_EndStatus(ByVal result As System.IAsyncResult) As SharePointSearchService.StatusResponse Implements SharePointSearchService.QueryServiceSoap.EndStatus
            Return MyBase.Channel.EndStatus(result)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Private Function EndStatus(ByVal result As System.IAsyncResult) As String
            Dim retVal As SharePointSearchService.StatusResponse = CType(Me,SharePointSearchService.QueryServiceSoap).EndStatus(result)
            Return retVal.StatusResult
        End Function
        
        Private Function OnBeginStatus(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginStatus(callback, asyncState)
        End Function
        
        Private Function OnEndStatus(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = Me.EndStatus(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnStatusCompleted(ByVal state As Object)
            If (Not (Me.StatusCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent StatusCompleted(Me, New StatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub StatusAsync()
            Me.StatusAsync(Nothing)
        End Sub
        
        Public Overloads Sub StatusAsync(ByVal userState As Object)
            If (Me.onBeginStatusDelegate Is Nothing) Then
                Me.onBeginStatusDelegate = AddressOf Me.OnBeginStatus
            End If
            If (Me.onEndStatusDelegate Is Nothing) Then
                Me.onEndStatusDelegate = AddressOf Me.OnEndStatus
            End If
            If (Me.onStatusCompletedDelegate Is Nothing) Then
                Me.onStatusCompletedDelegate = AddressOf Me.OnStatusCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginStatusDelegate, Nothing, Me.onEndStatusDelegate, Me.onStatusCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_BeginGetPortalSearchInfo(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginGetPortalSearchInfo
            Return MyBase.Channel.BeginGetPortalSearchInfo(callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_EndGetPortalSearchInfo(ByVal result As System.IAsyncResult) As String Implements SharePointSearchService.QueryServiceSoap.EndGetPortalSearchInfo
            Return MyBase.Channel.EndGetPortalSearchInfo(result)
        End Function
        
        Private Function OnBeginGetPortalSearchInfo(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,SharePointSearchService.QueryServiceSoap).BeginGetPortalSearchInfo(callback, asyncState)
        End Function
        
        Private Function OnEndGetPortalSearchInfo(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = CType(Me,SharePointSearchService.QueryServiceSoap).EndGetPortalSearchInfo(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnGetPortalSearchInfoCompleted(ByVal state As Object)
            If (Not (Me.GetPortalSearchInfoCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent GetPortalSearchInfoCompleted(Me, New GetPortalSearchInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub GetPortalSearchInfoAsync()
            Me.GetPortalSearchInfoAsync(Nothing)
        End Sub
        
        Public Overloads Sub GetPortalSearchInfoAsync(ByVal userState As Object)
            If (Me.onBeginGetPortalSearchInfoDelegate Is Nothing) Then
                Me.onBeginGetPortalSearchInfoDelegate = AddressOf Me.OnBeginGetPortalSearchInfo
            End If
            If (Me.onEndGetPortalSearchInfoDelegate Is Nothing) Then
                Me.onEndGetPortalSearchInfoDelegate = AddressOf Me.OnEndGetPortalSearchInfo
            End If
            If (Me.onGetPortalSearchInfoCompletedDelegate Is Nothing) Then
                Me.onGetPortalSearchInfoCompletedDelegate = AddressOf Me.OnGetPortalSearchInfoCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginGetPortalSearchInfoDelegate, Nothing, Me.onEndGetPortalSearchInfoDelegate, Me.onGetPortalSearchInfoCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_BeginGetSearchMetadata(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginGetSearchMetadata
            Return MyBase.Channel.BeginGetSearchMetadata(callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_EndGetSearchMetadata(ByVal result As System.IAsyncResult) As SharePointSearchService.ArrayOfXElement Implements SharePointSearchService.QueryServiceSoap.EndGetSearchMetadata
            Return MyBase.Channel.EndGetSearchMetadata(result)
        End Function
        
        Private Function OnBeginGetSearchMetadata(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,SharePointSearchService.QueryServiceSoap).BeginGetSearchMetadata(callback, asyncState)
        End Function
        
        Private Function OnEndGetSearchMetadata(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As SharePointSearchService.ArrayOfXElement = CType(Me,SharePointSearchService.QueryServiceSoap).EndGetSearchMetadata(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnGetSearchMetadataCompleted(ByVal state As Object)
            If (Not (Me.GetSearchMetadataCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent GetSearchMetadataCompleted(Me, New GetSearchMetadataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub GetSearchMetadataAsync()
            Me.GetSearchMetadataAsync(Nothing)
        End Sub
        
        Public Overloads Sub GetSearchMetadataAsync(ByVal userState As Object)
            If (Me.onBeginGetSearchMetadataDelegate Is Nothing) Then
                Me.onBeginGetSearchMetadataDelegate = AddressOf Me.OnBeginGetSearchMetadata
            End If
            If (Me.onEndGetSearchMetadataDelegate Is Nothing) Then
                Me.onEndGetSearchMetadataDelegate = AddressOf Me.OnEndGetSearchMetadata
            End If
            If (Me.onGetSearchMetadataCompletedDelegate Is Nothing) Then
                Me.onGetSearchMetadataCompletedDelegate = AddressOf Me.OnGetSearchMetadataCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginGetSearchMetadataDelegate, Nothing, Me.onEndGetSearchMetadataDelegate, Me.onGetSearchMetadataCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_BeginRecordClick(ByVal request As SharePointSearchService.RecordClickRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginRecordClick
            Return MyBase.Channel.BeginRecordClick(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Private Function BeginRecordClick(ByVal clickInfoXml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim inValue As SharePointSearchService.RecordClickRequest = New SharePointSearchService.RecordClickRequest()
            inValue.clickInfoXml = clickInfoXml
            Return CType(Me,SharePointSearchService.QueryServiceSoap).BeginRecordClick(inValue, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_EndRecordClick(ByVal result As System.IAsyncResult) As SharePointSearchService.RecordClickResponse Implements SharePointSearchService.QueryServiceSoap.EndRecordClick
            Return MyBase.Channel.EndRecordClick(result)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Private Sub EndRecordClick(ByVal result As System.IAsyncResult)
            Dim retVal As SharePointSearchService.RecordClickResponse = CType(Me,SharePointSearchService.QueryServiceSoap).EndRecordClick(result)
        End Sub
        
        Private Function OnBeginRecordClick(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim clickInfoXml As String = CType(inValues(0),String)
            Return Me.BeginRecordClick(clickInfoXml, callback, asyncState)
        End Function
        
        Private Function OnEndRecordClick(ByVal result As System.IAsyncResult) As Object()
            Me.EndRecordClick(result)
            Return Nothing
        End Function
        
        Private Sub OnRecordClickCompleted(ByVal state As Object)
            If (Not (Me.RecordClickCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent RecordClickCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub RecordClickAsync(ByVal clickInfoXml As String)
            Me.RecordClickAsync(clickInfoXml, Nothing)
        End Sub
        
        Public Overloads Sub RecordClickAsync(ByVal clickInfoXml As String, ByVal userState As Object)
            If (Me.onBeginRecordClickDelegate Is Nothing) Then
                Me.onBeginRecordClickDelegate = AddressOf Me.OnBeginRecordClick
            End If
            If (Me.onEndRecordClickDelegate Is Nothing) Then
                Me.onEndRecordClickDelegate = AddressOf Me.OnEndRecordClick
            End If
            If (Me.onRecordClickCompletedDelegate Is Nothing) Then
                Me.onRecordClickCompletedDelegate = AddressOf Me.OnRecordClickCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginRecordClickDelegate, New Object() {clickInfoXml}, Me.onEndRecordClickDelegate, Me.onRecordClickCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_BeginGetQuerySuggestions(ByVal queryXml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginGetQuerySuggestions
            Return MyBase.Channel.BeginGetQuerySuggestions(queryXml, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SharePointSearchService_QueryServiceSoap_EndGetQuerySuggestions(ByVal result As System.IAsyncResult) As String() Implements SharePointSearchService.QueryServiceSoap.EndGetQuerySuggestions
            Return MyBase.Channel.EndGetQuerySuggestions(result)
        End Function
        
        Private Function OnBeginGetQuerySuggestions(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim queryXml As String = CType(inValues(0),String)
            Return CType(Me,SharePointSearchService.QueryServiceSoap).BeginGetQuerySuggestions(queryXml, callback, asyncState)
        End Function
        
        Private Function OnEndGetQuerySuggestions(ByVal result As System.IAsyncResult) As Object()
            Dim retVal() As String = CType(Me,SharePointSearchService.QueryServiceSoap).EndGetQuerySuggestions(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnGetQuerySuggestionsCompleted(ByVal state As Object)
            If (Not (Me.GetQuerySuggestionsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent GetQuerySuggestionsCompleted(Me, New GetQuerySuggestionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub GetQuerySuggestionsAsync(ByVal queryXml As String)
            Me.GetQuerySuggestionsAsync(queryXml, Nothing)
        End Sub
        
        Public Overloads Sub GetQuerySuggestionsAsync(ByVal queryXml As String, ByVal userState As Object)
            If (Me.onBeginGetQuerySuggestionsDelegate Is Nothing) Then
                Me.onBeginGetQuerySuggestionsDelegate = AddressOf Me.OnBeginGetQuerySuggestions
            End If
            If (Me.onEndGetQuerySuggestionsDelegate Is Nothing) Then
                Me.onEndGetQuerySuggestionsDelegate = AddressOf Me.OnEndGetQuerySuggestions
            End If
            If (Me.onGetQuerySuggestionsCompletedDelegate Is Nothing) Then
                Me.onGetQuerySuggestionsCompletedDelegate = AddressOf Me.OnGetQuerySuggestionsCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginGetQuerySuggestionsDelegate, New Object() {queryXml}, Me.onEndGetQuerySuggestionsDelegate, Me.onGetQuerySuggestionsCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginOpen(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginOpen(callback, asyncState)
        End Function
        
        Private Function OnEndOpen(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndOpen(result)
            Return Nothing
        End Function
        
        Private Sub OnOpenCompleted(ByVal state As Object)
            If (Not (Me.OpenCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent OpenCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub OpenAsync()
            Me.OpenAsync(Nothing)
        End Sub
        
        Public Overloads Sub OpenAsync(ByVal userState As Object)
            If (Me.onBeginOpenDelegate Is Nothing) Then
                Me.onBeginOpenDelegate = AddressOf Me.OnBeginOpen
            End If
            If (Me.onEndOpenDelegate Is Nothing) Then
                Me.onEndOpenDelegate = AddressOf Me.OnEndOpen
            End If
            If (Me.onOpenCompletedDelegate Is Nothing) Then
                Me.onOpenCompletedDelegate = AddressOf Me.OnOpenCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOpenDelegate, Nothing, Me.onEndOpenDelegate, Me.onOpenCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginClose(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginClose(callback, asyncState)
        End Function
        
        Private Function OnEndClose(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndClose(result)
            Return Nothing
        End Function
        
        Private Sub OnCloseCompleted(ByVal state As Object)
            If (Not (Me.CloseCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent CloseCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub CloseAsync()
            Me.CloseAsync(Nothing)
        End Sub
        
        Public Overloads Sub CloseAsync(ByVal userState As Object)
            If (Me.onBeginCloseDelegate Is Nothing) Then
                Me.onBeginCloseDelegate = AddressOf Me.OnBeginClose
            End If
            If (Me.onEndCloseDelegate Is Nothing) Then
                Me.onEndCloseDelegate = AddressOf Me.OnEndClose
            End If
            If (Me.onCloseCompletedDelegate Is Nothing) Then
                Me.onCloseCompletedDelegate = AddressOf Me.OnCloseCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCloseDelegate, Nothing, Me.onEndCloseDelegate, Me.onCloseCompletedDelegate, userState)
        End Sub
        
        Protected Overrides Function CreateChannel() As SharePointSearchService.QueryServiceSoap
            Return New QueryServiceSoapClientChannel(Me)
        End Function
        
        Private Class QueryServiceSoapClientChannel
            Inherits ChannelBase(Of SharePointSearchService.QueryServiceSoap)
            Implements SharePointSearchService.QueryServiceSoap
            
            Public Sub New(ByVal client As System.ServiceModel.ClientBase(Of SharePointSearchService.QueryServiceSoap))
                MyBase.New(client)
            End Sub
            
            Public Function BeginQuery(ByVal request As SharePointSearchService.QueryRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginQuery
                Dim _args((1) - 1) As Object
                _args(0) = request
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Query", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndQuery(ByVal result As System.IAsyncResult) As SharePointSearchService.QueryResponse Implements SharePointSearchService.QueryServiceSoap.EndQuery
                Dim _args((0) - 1) As Object
                Dim _result As SharePointSearchService.QueryResponse = CType(MyBase.EndInvoke("Query", _args, result),SharePointSearchService.QueryResponse)
                Return _result
            End Function
            
            Public Function BeginQueryEx(ByVal queryXml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginQueryEx
                Dim _args((1) - 1) As Object
                _args(0) = queryXml
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("QueryEx", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndQueryEx(ByVal result As System.IAsyncResult) As SharePointSearchService.ArrayOfXElement Implements SharePointSearchService.QueryServiceSoap.EndQueryEx
                Dim _args((0) - 1) As Object
                Dim _result As SharePointSearchService.ArrayOfXElement = CType(MyBase.EndInvoke("QueryEx", _args, result),SharePointSearchService.ArrayOfXElement)
                Return _result
            End Function
            
            Public Function BeginRegistration(ByVal request As SharePointSearchService.RegistrationRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginRegistration
                Dim _args((1) - 1) As Object
                _args(0) = request
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Registration", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndRegistration(ByVal result As System.IAsyncResult) As SharePointSearchService.RegistrationResponse Implements SharePointSearchService.QueryServiceSoap.EndRegistration
                Dim _args((0) - 1) As Object
                Dim _result As SharePointSearchService.RegistrationResponse = CType(MyBase.EndInvoke("Registration", _args, result),SharePointSearchService.RegistrationResponse)
                Return _result
            End Function
            
            Public Function BeginStatus(ByVal request As SharePointSearchService.StatusRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginStatus
                Dim _args((1) - 1) As Object
                _args(0) = request
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Status", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndStatus(ByVal result As System.IAsyncResult) As SharePointSearchService.StatusResponse Implements SharePointSearchService.QueryServiceSoap.EndStatus
                Dim _args((0) - 1) As Object
                Dim _result As SharePointSearchService.StatusResponse = CType(MyBase.EndInvoke("Status", _args, result),SharePointSearchService.StatusResponse)
                Return _result
            End Function
            
            Public Function BeginGetPortalSearchInfo(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginGetPortalSearchInfo
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("GetPortalSearchInfo", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndGetPortalSearchInfo(ByVal result As System.IAsyncResult) As String Implements SharePointSearchService.QueryServiceSoap.EndGetPortalSearchInfo
                Dim _args((0) - 1) As Object
                Dim _result As String = CType(MyBase.EndInvoke("GetPortalSearchInfo", _args, result),String)
                Return _result
            End Function
            
            Public Function BeginGetSearchMetadata(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginGetSearchMetadata
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("GetSearchMetadata", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndGetSearchMetadata(ByVal result As System.IAsyncResult) As SharePointSearchService.ArrayOfXElement Implements SharePointSearchService.QueryServiceSoap.EndGetSearchMetadata
                Dim _args((0) - 1) As Object
                Dim _result As SharePointSearchService.ArrayOfXElement = CType(MyBase.EndInvoke("GetSearchMetadata", _args, result),SharePointSearchService.ArrayOfXElement)
                Return _result
            End Function
            
            Public Function BeginRecordClick(ByVal request As SharePointSearchService.RecordClickRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginRecordClick
                Dim _args((1) - 1) As Object
                _args(0) = request
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("RecordClick", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndRecordClick(ByVal result As System.IAsyncResult) As SharePointSearchService.RecordClickResponse Implements SharePointSearchService.QueryServiceSoap.EndRecordClick
                Dim _args((0) - 1) As Object
                Dim _result As SharePointSearchService.RecordClickResponse = CType(MyBase.EndInvoke("RecordClick", _args, result),SharePointSearchService.RecordClickResponse)
                Return _result
            End Function
            
            Public Function BeginGetQuerySuggestions(ByVal queryXml As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SharePointSearchService.QueryServiceSoap.BeginGetQuerySuggestions
                Dim _args((1) - 1) As Object
                _args(0) = queryXml
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("GetQuerySuggestions", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndGetQuerySuggestions(ByVal result As System.IAsyncResult) As String() Implements SharePointSearchService.QueryServiceSoap.EndGetQuerySuggestions
                Dim _args((0) - 1) As Object
                Dim _result() As String = CType(MyBase.EndInvoke("GetQuerySuggestions", _args, result),String())
                Return _result
            End Function
        End Class
    End Class
    
    <System.Xml.Serialization.XmlSchemaProviderAttribute(Nothing, IsAny:=true),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Silverlight.ServiceReference", "3.0.0.0")>  _
    Partial Public Class ArrayOfXElement
        Inherits Object
        Implements System.Xml.Serialization.IXmlSerializable
        
        Private nodesList As System.Collections.Generic.List(Of System.Xml.Linq.XElement) = New System.Collections.Generic.List(Of System.Xml.Linq.XElement)()
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Overridable ReadOnly Property Nodes() As System.Collections.Generic.List(Of System.Xml.Linq.XElement)
            Get
                Return Me.nodesList
            End Get
        End Property
        
        Public Overridable Function GetSchema() As System.Xml.Schema.XmlSchema Implements System.Xml.Serialization.IXmlSerializable.GetSchema
            Throw New System.NotImplementedException()
        End Function
        
        Public Overridable Sub WriteXml(ByVal writer As System.Xml.XmlWriter) Implements System.Xml.Serialization.IXmlSerializable.WriteXml
            Dim e As System.Collections.Generic.IEnumerator(Of System.Xml.Linq.XElement) = nodesList.GetEnumerator

            Do While e.MoveNext
                CType(e.Current,System.Xml.Serialization.IXmlSerializable).WriteXml(writer)

            Loop
        End Sub
        
        Public Overridable Sub ReadXml(ByVal reader As System.Xml.XmlReader) Implements System.Xml.Serialization.IXmlSerializable.ReadXml

            Do While (reader.NodeType <> System.Xml.XmlNodeType.EndElement)
                If (reader.NodeType = System.Xml.XmlNodeType.Element) Then
                    Dim elem As System.Xml.Linq.XElement = New System.Xml.Linq.XElement("default")
                    CType(elem,System.Xml.Serialization.IXmlSerializable).ReadXml(reader)
                    Nodes.Add(elem)
                Else
                    reader.Skip
                End If

            Loop
        End Sub
    End Class
End Namespace
