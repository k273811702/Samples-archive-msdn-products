' Excel 2007/2010
' Working with Tables (ListObject)
' Sort and Filter a table.

' In Excel 2010, in a new workbook, copy all this code into
' the Sheet1 class module. Place the cursor in the
' ListObjectSortFilterDemo procedure, and then press F8 to start debugging, then Shift+F8 to
' single-step through the code (stepping over any called procedures).
' Arrange the VBA and Excel windows
' side by side so you can see the results of running the code.

' Work with ListObject members:
'  Sort
'  AutoFilter

Sub ListObjectSortFilterDemo()
    ' Step over this procedure. It's not terribly interesting.
    FillRandomData
   
    Dim lo As ListObject
    Set lo = ListObjects.Add( _
     SourceType:=xlSrcRange, _
     Source:=Range("A1:F13"), _
     XlListObjectHasHeaders:=xlYes)
    lo.Name = "SampleData"
   
    Dim so As Sort
    With lo.Sort
        With .SortFields
            .Clear
            .Add Range("SampleData[[#All], [Total]]"), SortOn:=xlSortOnValues, Order:=xlAscending
        End With
        .Header = xlYes
        .Orientation = xlSortColumns
        .Apply
    End With
       
    ' Set up a simple filter, giving values between 150 and 200:
    lo.Range.AutoFilter Field:=6, Criteria1:=">150", Operator:=xlAnd, Criteria2:="<200"
    ' Now clear the filter:
    lo.Range.AutoFilter Field:=6
   
    ' Filter for the top 10 percent, which should only be one item:
    lo.Range.AutoFilter Field:=6, Operator:=xlTop10Percent
   
    ' Delete the List object so you can run the code again if you like.
    lo.Delete
End Sub

Sub FillRandomData()
    ' No need to stop through this procedure.
    Range("A1", "F1").Value = Array("Month", "North", "South", "East", "West", "Total")
   
    ' Fill in twelve rows with random data.
    Dim i As Integer
    Dim j As Integer
    For i = 1 To 12
        Cells(i + 1, 1).Value = MonthName(i, True)
        For j = 2 To 5
            Cells(i + 1, j) = Round(Rnd * 100)
        Next j
    Next i
    Range("F2", "F13").Formula = "=SUM(B2:E2)"
End Sub
