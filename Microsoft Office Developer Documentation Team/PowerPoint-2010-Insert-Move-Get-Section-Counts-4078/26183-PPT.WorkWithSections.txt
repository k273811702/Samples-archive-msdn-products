' PowerPoint 2010

Sub DemoSections()
    ' Use this procedure to demonstrate working with sections,
    ' focusing on new features in PowerPoint 2010.
   
    ' Copy this code into a module in a new presentation.
    ' Display the VBA window side-by-side with the PowerPoint window
    ' and press F8 and then Shift+F8 to single step through this
    ' code for the most effective use of this demonstration.
    SetupDemo
   
    Dim i As Integer
   
    ' Add three sections:
    With ActivePresentation.SectionProperties
        ' Use the AddBeforeSlide method to insert a
        ' section in a position relative to
        ' a particular slide in the presentation:
        .AddBeforeSlide 2, "Test Section 1"
        .AddBeforeSlide 5, "Test Section 2"
        .AddBeforeSlide 9, "Test Section 3"
       
        ' Use the AddSection method to insert a section
        ' in relation to other sections, as opposed to
        ' in relation to a specific slide:
        .AddSection 1, "Intro Section"
       
        ' Use the Count property to return the total number of sections.
        ' Use the Name property to get the name of the section.
        ' Use the SlidesCount method to return the number of slides in a
        ' given section:
        For i = 1 To .Count
            Debug.Print "Section " & i & "(" & .Name(i) & ") contains " & _
             .SlidesCount(i) & " slide(s);";
                       
            ' The FirstSlide method returns the index of the first slide
            ' in the section. If the section has no slides, it returns -1.
            Debug.Print " The first slide is : " & .FirstSlide(i)
           
            ' Use the Rename method to change the name of a section:
            .Rename i, "New Name " & i
        Next i
       
        ' Use the Move method to move a section, along with its slides:
        ' This code moves the second section to the end:
        .Move 2, .Count
    End With
   
    ' Use the SectionIndex property of a slide to
    ' determine what section it's in:
    With ActivePresentation
        Dim sld As Slide
        For Each sld In ActivePresentation.Slides
            Debug.Print "Slide " & sld.SlideIndex & " is in section " & sld.sectionIndex
        Next sld
   
        ' Use the MoveToSectionStart method to move
        ' a slide to the beginning of the section.
        ' This code moves the final slide to the beginning of
        ' the first section:
        Set sld = .Slides(.Slides.Count)
        sld.MoveToSectionStart 1
       
        ' You can expand or contract any section, as well.
        ' Use the IsSectionExpanded property and the ExpandSection
        ' method to do the work.
       
        ActiveWindow.ViewType = ppViewSlideSorter
       
        ' First, contract every other section:
        For i = 1 To .SectionProperties.Count
            ' Contract the even-numbered sections:
            If i Mod 2 = 0 Then
                ActiveWindow.ExpandSection i, False
            End If
        Next i
       
        ' Now toggle the state of the expansion for all sections:
        Dim isExpanded As Boolean
        For i = 1 To .SectionProperties.Count
            isExpanded = ActiveWindow.IsSectionExpanded(i)
            ActiveWindow.ExpandSection i, Not isExpanded
        Next i
    End With
   
    With ActivePresentation.SectionProperties
        ' Unlike in the user interface, there's no simple way to remove
        ' all the sections, so you'll need to write code like this
        ' to do it:
        For i = .Count To 1 Step -1
            ' Pass True in the second parameter to delete the
            ' slides in the section:
            .Delete i, False
        Next i
       
        ' Now delete all the slides except the first one, to reset
        ' back to the way the demonstration started:
        CleanupDemo
    End With
       
   
End Sub

Private Sub SetupDemo()
    ' Set the title of the presentation, and add 10 slides.
    Dim i As Integer
    With ActivePresentation
        .Slides(1).Shapes(1).TextFrame.TextRange.Text = "Title"
        Dim sld As Slide
        For i = 1 To 10
            Set sld = .Slides.Add(i + 1, ppLayoutText)
            sld.Shapes(1).TextFrame.TextRange.Text = "Slide " & i
        Next i
    End With
End Sub

Private Sub CleanupDemo()
    ' Remove all but the first slide.
    ActiveWindow.ViewType = ppViewNormal
    Dim i As Integer
    For i = ActivePresentation.Slides.Count To 2 Step -1
        ActivePresentation.Slides(i).Delete
    Next i
End Sub
