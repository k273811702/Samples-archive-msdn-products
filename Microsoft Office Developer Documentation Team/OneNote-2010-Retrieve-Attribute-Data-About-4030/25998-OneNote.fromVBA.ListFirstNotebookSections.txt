Option Explicit

' OneNote 2010

' Demonstrate the GetHierarchy method.

' Use any VBA host including Excel 2010, PowerPoint 2010,
' or Word 2010.
' OneNote 2010 is not a VBA host.

' In your VBA host, add references to the following
' external libraries using the Add References dialog:
' Microsoft OneNote 14.0 Object Library
' Microsoft XML, v6.0

' OneNote's GetHierarchy method allows you
' to get meta-data and data about the OneNote
' Notebooks.


' Paste all this code into a module,
' place the cursor within the
' ListOneNoteSectionsFromFirstNotebook procedure,
' and press F5.
 
' The ListOneNoteSectionsFromFirstNotebook procedure
' uses the MSXML library to parse the returned XML
' from OneNote and output the first Notebook's 
' Section meta-data to the Immediate window
' of your VBA host.

' In order to do this, the code loads up the 
' list of available Notebooks and uses 
' the first one returned.

Sub ListOneNoteSectionsFromFirstNotebook()
    ' Connect to OneNote 2010.
    ' OneNote will be started if it's not running.
    Dim oneNote As OneNote14.Application
    Set oneNote = New OneNote14.Application
    
    ' Get all of the Notebook nodes.
    Dim nodes As MSXML2.IXMLDOMNodeList
    Set nodes = GetFirstOneNoteNotebookNodes(oneNote)
    If Not nodes Is Nothing Then
        ' Get the first OneNote Notebook in the XML document.
        Dim node As MSXML2.IXMLDOMNode
        Set node = nodes(0)
        Dim noteBookName As String
        noteBookName = node.Attributes.getNamedItem("name").Text
        
        ' Get the ID for the Notebook so the code can retrieve
        ' the list of sections.
        Dim notebookID As String
        notebookID = node.Attributes.getNamedItem("ID").Text
        
        ' Load the XML for the Sections for the Notebook requested.
        Dim sectionsXml As String
        oneNote.GetHierarchy notebookID, hsSections, sectionsXml, xs2010
        
        Dim secDoc As MSXML2.DOMDocument
        Set secDoc = New MSXML2.DOMDocument
    
        If secDoc.LoadXML(sectionsXml) Then
            Dim secNodes As MSXML2.IXMLDOMNodeList
            Set secNodes = secDoc.DocumentElement.SelectNodes("//one:Section")

            If Not secNodes Is Nothing Then
                Dim secNode As MSXML2.IXMLDOMNode
                ' Walk the collection of Notebook sections.
                ' Read attribute values and write them
                ' out to the Immediate window.
                For Each secNode In secNodes
                    Debug.Print "Notebook Name: " & noteBookName
                    Debug.Print "  Section Name: " & secNode.Attributes.getNamedItem("name").Text
                    Debug.Print "    Path: " & GetAttributeValueFromNode(secNode, "path")
                    Debug.Print "    ID: " & GetAttributeValueFromNode(secNode, "ID")
                    Debug.Print "    Color: " & GetAttributeValueFromNode(secNode, "color")
                    Debug.Print "    Is Unread: " & GetAttributeValueFromNode(secNode, "isUnread")
                    Debug.Print "    Is Currently Viewed: " & GetAttributeValueFromNode(secNode, "isCurrentlyViewed")
                    Debug.Print "    Last Modified: " & GetAttributeValueFromNode(secNode, "lastModifiedTime")
                Next
            Else
                MsgBox "OneNote 2010 Section nodes not found."
            End If
        Else
            MsgBox "OneNote 2010 Section XML Data failed to load."
        End If
    Else
        MsgBox "OneNote 2010 XML Data failed to load."
    End If
    
End Sub

Private Function GetAttributeValueFromNode(node As MSXML2.IXMLDOMNode, attributeName As String) As String
    If node.Attributes.getNamedItem(attributeName) Is Nothing Then
        GetAttributeValueFromNode = "Not found."
    Else
        GetAttributeValueFromNode = node.Attributes.getNamedItem(attributeName).Text
    End If
End Function

Private Function GetFirstOneNoteNotebookNodes(oneNote As OneNote14.Application) As MSXML2.IXMLDOMNodeList
    ' Get the XML that represents the OneNote notebooks available.
    Dim notebookXml As String
    ' OneNote fills notebookXml with an XML document providing information
    ' about what OneNote notebooks are available.
    ' You want all the data and thus are providing an empty string
    ' for the bstrStartNodeID parameter.
    oneNote.GetHierarchy "", hsNotebooks, notebookXml, xs2010
    
    ' Use the MSXML Library to parse the XML.
    Dim doc As MSXML2.DOMDocument
    Set doc = New MSXML2.DOMDocument
    
    If doc.LoadXML(notebookXml) Then
        Set GetFirstOneNoteNotebookNodes = doc.DocumentElement.SelectNodes("//one:Notebook")
    Else
        Set GetFirstOneNoteNotebookNodes = Nothing
    End If
End Function
