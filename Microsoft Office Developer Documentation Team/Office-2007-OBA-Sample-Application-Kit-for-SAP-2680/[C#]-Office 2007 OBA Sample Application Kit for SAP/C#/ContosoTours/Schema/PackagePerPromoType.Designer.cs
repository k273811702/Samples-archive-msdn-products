//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1378
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Microsoft.SAPSK.ContosoTours.Schema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PackagePerPromoType")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PackagePerPromoType : global::System.Data.DataSet {
        
        private PackageDataTable tablePackage;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PackagePerPromoType() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PackagePerPromoType(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Package"] != null)) {
                    base.Tables.Add(new PackageDataTable(ds.Tables["Package"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PackageDataTable Package {
            get {
                return this.tablePackage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PackagePerPromoType cln = ((PackagePerPromoType)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Package"] != null)) {
                    base.Tables.Add(new PackageDataTable(ds.Tables["Package"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePackage = ((PackageDataTable)(base.Tables["Package"]));
            if ((initTable == true)) {
                if ((this.tablePackage != null)) {
                    this.tablePackage.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PackagePerPromoType";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PackagePerPackageType.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePackage = new PackageDataTable();
            base.Tables.Add(this.tablePackage);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePackage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PackagePerPromoType ds = new PackagePerPromoType();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void PackageRowChangeEventHandler(object sender, PackageRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PackageDataTable : global::System.Data.TypedTableBase<PackageRow> {
            
            private global::System.Data.DataColumn columnPackageID;
            
            private global::System.Data.DataColumn columnPackageName;
            
            private global::System.Data.DataColumn columnGoldPackageCount;
            
            private global::System.Data.DataColumn columnGoldPackageTotalSales;
            
            private global::System.Data.DataColumn columnSilverPackageCount;
            
            private global::System.Data.DataColumn columnSilverPackageTotalSales;
            
            private global::System.Data.DataColumn columnBronzePackageCount;
            
            private global::System.Data.DataColumn columnBronzePackageTotalSales;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageDataTable() {
                this.TableName = "Package";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PackageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PackageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackageIDColumn {
                get {
                    return this.columnPackageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackageNameColumn {
                get {
                    return this.columnPackageName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoldPackageCountColumn {
                get {
                    return this.columnGoldPackageCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoldPackageTotalSalesColumn {
                get {
                    return this.columnGoldPackageTotalSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SilverPackageCountColumn {
                get {
                    return this.columnSilverPackageCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SilverPackageTotalSalesColumn {
                get {
                    return this.columnSilverPackageTotalSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BronzePackageCountColumn {
                get {
                    return this.columnBronzePackageCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BronzePackageTotalSalesColumn {
                get {
                    return this.columnBronzePackageTotalSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageRow this[int index] {
                get {
                    return ((PackageRow)(this.Rows[index]));
                }
            }
            
            public event PackageRowChangeEventHandler PackageRowChanging;
            
            public event PackageRowChangeEventHandler PackageRowChanged;
            
            public event PackageRowChangeEventHandler PackageRowDeleting;
            
            public event PackageRowChangeEventHandler PackageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPackageRow(PackageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageRow AddPackageRow(int PackageID, string PackageName, int GoldPackageCount, decimal GoldPackageTotalSales, int SilverPackageCount, decimal SilverPackageTotalSales, int BronzePackageCount, decimal BronzePackageTotalSales) {
                PackageRow rowPackageRow = ((PackageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PackageID,
                        PackageName,
                        GoldPackageCount,
                        GoldPackageTotalSales,
                        SilverPackageCount,
                        SilverPackageTotalSales,
                        BronzePackageCount,
                        BronzePackageTotalSales};
                rowPackageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPackageRow);
                return rowPackageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageRow FindByPackageID(int PackageID) {
                return ((PackageRow)(this.Rows.Find(new object[] {
                            PackageID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PackageDataTable cln = ((PackageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PackageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPackageID = base.Columns["PackageID"];
                this.columnPackageName = base.Columns["PackageName"];
                this.columnGoldPackageCount = base.Columns["GoldPackageCount"];
                this.columnGoldPackageTotalSales = base.Columns["GoldPackageTotalSales"];
                this.columnSilverPackageCount = base.Columns["SilverPackageCount"];
                this.columnSilverPackageTotalSales = base.Columns["SilverPackageTotalSales"];
                this.columnBronzePackageCount = base.Columns["BronzePackageCount"];
                this.columnBronzePackageTotalSales = base.Columns["BronzePackageTotalSales"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPackageID = new global::System.Data.DataColumn("PackageID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackageID);
                this.columnPackageName = new global::System.Data.DataColumn("PackageName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackageName);
                this.columnGoldPackageCount = new global::System.Data.DataColumn("GoldPackageCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoldPackageCount);
                this.columnGoldPackageTotalSales = new global::System.Data.DataColumn("GoldPackageTotalSales", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoldPackageTotalSales);
                this.columnSilverPackageCount = new global::System.Data.DataColumn("SilverPackageCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSilverPackageCount);
                this.columnSilverPackageTotalSales = new global::System.Data.DataColumn("SilverPackageTotalSales", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSilverPackageTotalSales);
                this.columnBronzePackageCount = new global::System.Data.DataColumn("BronzePackageCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBronzePackageCount);
                this.columnBronzePackageTotalSales = new global::System.Data.DataColumn("BronzePackageTotalSales", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBronzePackageTotalSales);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPackageID}, true));
                this.columnPackageID.AllowDBNull = false;
                this.columnPackageID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageRow NewPackageRow() {
                return ((PackageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PackageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PackageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PackageRowChanged != null)) {
                    this.PackageRowChanged(this, new PackageRowChangeEvent(((PackageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PackageRowChanging != null)) {
                    this.PackageRowChanging(this, new PackageRowChangeEvent(((PackageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PackageRowDeleted != null)) {
                    this.PackageRowDeleted(this, new PackageRowChangeEvent(((PackageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PackageRowDeleting != null)) {
                    this.PackageRowDeleting(this, new PackageRowChangeEvent(((PackageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePackageRow(PackageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PackagePerPromoType ds = new PackagePerPromoType();
                xs.Add(ds.GetSchemaSerializable());
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PackageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PackageRow : global::System.Data.DataRow {
            
            private PackageDataTable tablePackage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PackageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePackage = ((PackageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PackageID {
                get {
                    return ((int)(this[this.tablePackage.PackageIDColumn]));
                }
                set {
                    this[this.tablePackage.PackageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PackageName {
                get {
                    try {
                        return ((string)(this[this.tablePackage.PackageNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackageName\' in table \'Package\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePackage.PackageNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoldPackageCount {
                get {
                    try {
                        return ((int)(this[this.tablePackage.GoldPackageCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoldPackageCount\' in table \'Package\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePackage.GoldPackageCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GoldPackageTotalSales {
                get {
                    try {
                        return ((decimal)(this[this.tablePackage.GoldPackageTotalSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoldPackageTotalSales\' in table \'Package\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePackage.GoldPackageTotalSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SilverPackageCount {
                get {
                    try {
                        return ((int)(this[this.tablePackage.SilverPackageCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SilverPackageCount\' in table \'Package\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePackage.SilverPackageCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SilverPackageTotalSales {
                get {
                    try {
                        return ((decimal)(this[this.tablePackage.SilverPackageTotalSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SilverPackageTotalSales\' in table \'Package\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePackage.SilverPackageTotalSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BronzePackageCount {
                get {
                    try {
                        return ((int)(this[this.tablePackage.BronzePackageCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BronzePackageCount\' in table \'Package\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePackage.BronzePackageCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BronzePackageTotalSales {
                get {
                    try {
                        return ((decimal)(this[this.tablePackage.BronzePackageTotalSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BronzePackageTotalSales\' in table \'Package\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePackage.BronzePackageTotalSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackageNameNull() {
                return this.IsNull(this.tablePackage.PackageNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackageNameNull() {
                this[this.tablePackage.PackageNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoldPackageCountNull() {
                return this.IsNull(this.tablePackage.GoldPackageCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoldPackageCountNull() {
                this[this.tablePackage.GoldPackageCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoldPackageTotalSalesNull() {
                return this.IsNull(this.tablePackage.GoldPackageTotalSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoldPackageTotalSalesNull() {
                this[this.tablePackage.GoldPackageTotalSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSilverPackageCountNull() {
                return this.IsNull(this.tablePackage.SilverPackageCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSilverPackageCountNull() {
                this[this.tablePackage.SilverPackageCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSilverPackageTotalSalesNull() {
                return this.IsNull(this.tablePackage.SilverPackageTotalSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSilverPackageTotalSalesNull() {
                this[this.tablePackage.SilverPackageTotalSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBronzePackageCountNull() {
                return this.IsNull(this.tablePackage.BronzePackageCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBronzePackageCountNull() {
                this[this.tablePackage.BronzePackageCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBronzePackageTotalSalesNull() {
                return this.IsNull(this.tablePackage.BronzePackageTotalSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBronzePackageTotalSalesNull() {
                this[this.tablePackage.BronzePackageTotalSalesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PackageRowChangeEvent : global::System.EventArgs {
            
            private PackageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageRowChangeEvent(PackageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591