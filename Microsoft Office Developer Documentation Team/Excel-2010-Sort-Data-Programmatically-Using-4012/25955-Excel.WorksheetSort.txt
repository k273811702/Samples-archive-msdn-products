' Excel 2010

' Work with the Worksheet.Sort property.

' In Excel 2010, in a new workbook, copy all this code into
' the Sheet1 class module. Place the cursor in the
' TestWorksheetSort procedure,
' and then press F8 to single-step through the code.

Sub TestWorksheetSort()
 
  ' Create sample data:
  Range("A1:D1") = Array("Name", "City", "State", "Age")
  Range("A2:D2") = Array("Pam", "Los Angeles", "CA", "16")
  Range("A3:D3") = Array("Jerry", "Boston", "MA", "14")
  Range("A4:D4") = Array("Juanita", "San Francisco", "CA", "15")
  Range("A5:D5") = Array("Xochitl", "Houston", "TX", "11")
  Range("A6:D6") = Array("Jozi", "New York", "NY", "7")
  Range("A7:D7") = Array("Aneka", "Houston", "TX", "18")
  Range("A8:D8") = Array("Brie", "Boston", "MA", "22")
  Range("A9:D9") = Array("Andrew", "Seattle", "WA", "23")
  Range("A10:D10") = Array("Grace", "Boston", "MA", "35")
  Range("A11:D11") = Array("Tom", "Houston", "TX", "12")

  ' Retrieve a reference to the used range:
  Dim rng As Range
  Set rng = UsedRange

  ' Create sort:
  Dim srt As Sort
  ' Include these two lines to make sure you get
  ' IntelliSense help as you work with the Sort object:
  Dim sht As Worksheet
  Set sht = ActiveSheet
 
  Set srt = sht.Sort
 
  ' Sort first by state ascending, and then by age descending.
  srt.SortFields.Clear
  srt.SortFields.Add Key:=Columns("C"), _
   SortOn:=xlSortOnValues, Order:=xlAscending
  srt.SortFields.Add Key:=Columns("D"), _
   SortOn:=xlSortOnValues, Order:=xlDescending
  ' Set the sort range:
  srt.SetRange rng
  srt.Header = xlYes
  srt.MatchCase = True
  ' Apply the sort:
  srt.Apply
End Sub


